# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Shop.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
from functools import partial
from TcpClient import tcp_client_socket
from tkinter import *
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QRect, QSize
from PyQt5.QtWidgets import QApplication, QDialog, QMessageBox
import urllib.request
from FlowLayout import FlowLayout

class Ui_Dialog(object):
    def setupUi(self, Dialog, userID):
        self.path = "icon"
        self.userID = userID
        #self.update_message()  # 获取信息

        """self.skinlist = [
            ["0820001",
             "https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1595766234979&di=63dbd28f41929e2f3ba5697f0da47e1b&imgtype=0&src=http%3A%2F%2Fbbs.orzice.com%2Fdata%2Fattachment%2Fforum%2F201802%2F14%2F102510j91highd9zieecdh.jpg",
             "100"],
            ["0820002",
             "https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1595766292724&di=c5a61af635c4163ecf9e29483857a3f8&imgtype=0&src=http%3A%2F%2Fpic1.win4000.com%2Fwallpaper%2F7%2F579ef5112d8d7.jpg",
             "110"],
            ["0820003",
             "https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1595766325740&di=e69bef5a84f29fda29d3b935eed2ca9c&imgtype=0&src=http%3A%2F%2Fattach.bbs.miui.com%2Fforum%2F201307%2F17%2F210102zcl75v557n4od478.jpg",
             "120"],
            ["0820004", "http://p15.qhmsg.com/t01e2252d21f5bf45a5.jpg", "130"]]
        self.tools = "https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1595763643935&di=3f32a34fd774f9a24ca320020b2060a6&imgtype=0&src=http%3A%2F%2Fbpic.588ku.com%2Felement_origin_min_pic%2F00%2F61%2F78%2F7456db7f599becf.jpg"
        self.toolsprice = "10"""
        self.skinlist=[]

        self.form = Dialog
        self.form.setObjectName("Dialog")
        Dialog.setObjectName("Dialog")
        Dialog.resize(900, 600)
        self.label_1 = QtWidgets.QLabel(Dialog)
        self.label_1.setGeometry(QtCore.QRect(140, 20, 181, 51))
        font = QtGui.QFont()
        font.setFamily("幼圆")
        font.setPointSize(24)
        self.label_1.setFont(font)
        self.label_1.setAlignment(QtCore.Qt.AlignCenter)
        self.label_1.setObjectName("label_1")
        self.line = QtWidgets.QFrame(Dialog)
        self.line.setGeometry(QtCore.QRect(450, 0, 20, 631))
        self.line.setFrameShape(QtWidgets.QFrame.VLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.listWidget_skin = QtWidgets.QListWidget(Dialog)
        self.listWidget_skin.setGeometry(QtCore.QRect(20, 80, 421, 491))
        self.listWidget_skin.setObjectName("listView_skin")
        self.label_2 = QtWidgets.QLabel(Dialog)
        self.label_2.setGeometry(QtCore.QRect(590, 20, 181, 51))
        font = QtGui.QFont()
        font.setFamily("幼圆")
        font.setPointSize(24)
        self.label_2.setFont(font)
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.listWidget_tool = QtWidgets.QListWidget(Dialog)
        self.listWidget_tool.setGeometry(QtCore.QRect(480, 80, 401, 491))
        self.listWidget_tool.setObjectName("listView_tool")

        self.update_skin()
        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)


    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.label_1.setText(_translate("Dialog", "皮肤"))
        self.label_2.setText(_translate("Dialog", "道具"))

    def update_skin(self):
        tcp_client_socket.send("400 " + self.userID)
        data_list = tcp_client_socket.rec().split()
        print(data_list)
        if data_list[0] == "401":
            # 将商城信息存入列表skinlist中
            self.tools = data_list[1]
            urllib.request.urlretrieve(data_list[1],
                                       filename=self.path + "/shop_tools.jpg")  # 下载图片
            self.toolsprice = data_list[2]
            for i in range(int(len(data_list) / 3 - 1)):
                temp = []
                temp.append(data_list[i * 3 + 3])
                temp.append(data_list[i * 3 + 4])
                urllib.request.urlretrieve(data_list[i * 3 + 4],
                                           filename=self.path + "/shop_skin_" + data_list[i * 3 + 3] + ".jpg")  # 下载图片
                temp.append(data_list[i * 3 + 5])
                self.skinlist.append(temp)

        # 查看道具
        picture_button = QtWidgets.QPushButton()
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(self.path+"/shop_tools.jpg"), QtGui.QIcon.Normal,
                       QtGui.QIcon.Off)
        picture_button.setIcon(icon)
        picture_button.setIconSize(QtCore.QSize(70, 70))
        picture_button.setFlat(True)

        self.toolsbox = QtWidgets.QSpinBox()
        self.toolsbox.setMinimum(1)
        self.toolsbox.setMaximum(99)
        self.toolsbox.setMinimumSize(70, 70)
        self.toolsbox.valueChanged.connect(self.printprice)

        self.toolsprice_button = QtWidgets.QPushButton(self.toolsprice + "金币")
        self.toolsprice_button.setFlat(True)
        self.toolsprice_button.setMinimumSize(50, 70)

        self.toolspurchase_button = QtWidgets.QPushButton("购买")
        self.toolspurchase_button.setFlat(True)
        self.toolspurchase_button.setMinimumSize(50, 70)
        self.toolspurchase_button.clicked.connect(self.toolspurchase)

        # 设置每一行的布局
        layout = FlowLayout()
        layout.addWidget(picture_button)
        layout.addWidget(self.toolsprice_button)
        layout.addWidget(self.toolsbox)
        layout.addWidget(self.toolspurchase_button)

        # 给每一行加入上面的布局
        widget = QtWidgets.QDialog(self.listWidget_tool)
        item = QtWidgets.QListWidgetItem(self.listWidget_tool)
        item.setSizeHint(QSize(401, 100))

        widget.setLayout(layout)
        self.listWidget_tool.addItem(item)
        self.listWidget_tool.setItemWidget(item, widget)

        for j in self.skinlist:
            picture_button = QtWidgets.QPushButton()
            icon = QtGui.QIcon()
            icon.addPixmap(QtGui.QPixmap(self.path+"/shop_skin_" + j[0] + ".jpg"), QtGui.QIcon.Normal,
                           QtGui.QIcon.Off)
            picture_button.setIcon(icon)
            picture_button.setIconSize(QtCore.QSize(150, 100))
            picture_button.setFlat(True)

            skinprice_button = QtWidgets.QPushButton(j[2] + "金币")
            skinprice_button.setFlat(True)
            skinprice_button.setMinimumSize(50, 100)

            skinpurchase_button = QtWidgets.QPushButton("购买")
            skinpurchase_button.setFlat(True)
            skinpurchase_button.setMinimumSize(50, 100)

            skinpurchase_button.clicked.connect(partial(self.purchase, j[0]))

            # 设置每一行的布局
            layout = FlowLayout()
            layout.addWidget(picture_button)
            layout.addWidget(skinprice_button)
            layout.addWidget(skinpurchase_button)

            # 给每一行加入上面的布局
            widget = QtWidgets.QDialog(self.listWidget_skin)
            item = QtWidgets.QListWidgetItem(self.listWidget_skin)
            item.setSizeHint(QSize(301, 140))

            widget.setLayout(layout)
            self.listWidget_skin.addItem(item)
            self.listWidget_skin.setItemWidget(item, widget)

    def purchase(self,skin_ID):
        tcp_client_socket.send("402 " + self.userID + " " + skin_ID)
        userData_list = tcp_client_socket.rec().split()
        # print(userData_list)
        if userData_list[0] == "402a":
            reply = QMessageBox.about(self.form, "提示", "购买成功！")
        elif userData_list[0] == "402b":
            reply = QMessageBox.about(self.form, "提示", "购买失败！您已经拥有这个皮肤。")
        elif userData_list[0] == "402c":
            reply = QMessageBox.about(self.form, "提示", "购买失败！您的金币不足！")

    def toolspurchase(self):
        tcp_client_socket.send("403 " + self.userID + " " + str(self.toolsbox.value()))
        userData_list = tcp_client_socket.rec().split()
        if userData_list[0] == "403a":
            reply = QMessageBox.about(self.form, "提示", "购买成功！")
        elif userData_list[0] == "403b":
            reply = QMessageBox.about(self.form, "提示", "购买失败！您的金币不足。")

    def printprice(self):
        self.toolsprice_button.setText(str(int(self.toolsprice) * self.toolsbox.value()) + "金币")
        print(self.toolsbox.value())


if __name__ == "__main__":
    import sys
    tcp_client_socket.conn()
    app = QtWidgets.QApplication(sys.argv)
    widget = QtWidgets.QWidget()
    ui = Ui_Dialog()
    ui.setupUi(widget, "12341234")
    widget.show()
    sys.exit(app.exec_())