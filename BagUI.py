# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'shop.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import sys
from functools import partial

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QRect, QSize
from PyQt5.QtWidgets import QApplication, QDialog, QMessageBox
from TcpClient import tcp_client_socket
import urllib.request

from FlowLayout import FlowLayout
#from minesweeper.Client.FlowLayout import FlowLayout


class Ui_Dialog(object):
    def setupUi(self, Dialog, userID):
        self.path = "icon"
        self.userID = userID
        self.skinlist = []

        self.form = Dialog
        self.form.setObjectName("Dialog")
        Dialog.setObjectName("Dialog")
        Dialog.resize(900, 600)
        self.label_1 = QtWidgets.QLabel(Dialog)
        self.label_1.setGeometry(QtCore.QRect(140, 20, 181, 51))
        font = QtGui.QFont()
        font.setFamily("幼圆")
        font.setPointSize(24)
        self.label_1.setFont(font)
        self.label_1.setAlignment(QtCore.Qt.AlignCenter)
        self.label_1.setObjectName("label_1")
        self.line = QtWidgets.QFrame(Dialog)
        self.line.setGeometry(QtCore.QRect(450, 0, 20, 631))
        self.line.setFrameShape(QtWidgets.QFrame.VLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.listWidget_skin = QtWidgets.QListWidget(Dialog)
        self.listWidget_skin.setGeometry(QtCore.QRect(20, 80, 421, 491))
        self.listWidget_skin.setObjectName("listView_skin")
        self.label_2 = QtWidgets.QLabel(Dialog)
        self.label_2.setGeometry(QtCore.QRect(590, 20, 181, 51))
        font = QtGui.QFont()
        font.setFamily("幼圆")
        font.setPointSize(24)
        self.label_2.setFont(font)
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.listWidget_tool = QtWidgets.QListWidget(Dialog)
        self.listWidget_tool.setGeometry(QtCore.QRect(480, 80, 401, 491))
        self.listWidget_tool.setObjectName("listView_tool")

        self.update_message()
        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.label_1.setText(_translate("Dialog", "皮肤"))
        self.label_2.setText(_translate("Dialog", "道具"))

    def update_message(self):
        tcp_client_socket.send("500 " + self.userID)
        data_list = tcp_client_socket.rec().split()
        print(data_list)
        if data_list[0] == "501":
            # 将皮肤信息存入列表skinlist中
            self.tools = data_list[1]
            urllib.request.urlretrieve(data_list[1],
                                       filename=self.path + "/bag_tools.jpg")  # 下载图片
            self.toolsnum = data_list[2]
            for i in range(int(len(data_list) / 3 - 1)):
                temp = []
                temp.append(data_list[i * 3 + 3])
                temp.append(data_list[i * 3 + 4])
                urllib.request.urlretrieve(data_list[i * 3 + 4],
                                           filename=self.path + "/bag_skin_" + data_list[i * 3 + 3] + ".jpg")  # 下载图片
                temp.append(data_list[i * 3 + 5])
                self.skinlist.append(temp)

        # 查看道具
        picture_button = QtWidgets.QPushButton()
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(self.path+"/bag_tools.jpg"), QtGui.QIcon.Normal,
                       QtGui.QIcon.Off)
        picture_button.setIcon(icon)
        picture_button.setIconSize(QtCore.QSize(70, 70))
        picture_button.setFlat(True)

        self.toolsnum_button = QtWidgets.QPushButton("您拥有此道具："+self.toolsnum + "个")
        self.toolsnum_button.setFlat(True)
        self.toolsnum_button.setMinimumSize(50, 70)

        # 设置每一行的布局
        layout = FlowLayout()
        layout.addWidget(picture_button)
        layout.addWidget(self.toolsnum_button)

        # 给每一行加入上面的布局
        widget = QtWidgets.QDialog(self.listWidget_tool)
        item = QtWidgets.QListWidgetItem(self.listWidget_tool)
        item.setSizeHint(QSize(401, 100))

        widget.setLayout(layout)
        self.listWidget_tool.addItem(item)
        self.listWidget_tool.setItemWidget(item, widget)

        for j in self.skinlist:
            picture_button = QtWidgets.QPushButton()
            icon = QtGui.QIcon()
            icon.addPixmap(QtGui.QPixmap(self.path + "/bag_skin_" + j[0] + ".jpg"), QtGui.QIcon.Normal,
                           QtGui.QIcon.Off)
            picture_button.setIcon(icon)
            picture_button.setIconSize(QtCore.QSize(150, 100))
            picture_button.setFlat(True)

            skinsetup_button = QtWidgets.QPushButton("设置")
            skinsetup_button.setFlat(True)
            skinsetup_button.setMinimumSize(50, 100)
            skinsetup_button.clicked.connect(partial(self.skinsetup, j[0]))

            # 设置每一行的布局
            layout = FlowLayout()
            layout.addWidget(picture_button)
            layout.addWidget(skinsetup_button)

            # 给每一行加入上面的布局
            widget = QtWidgets.QDialog(self.listWidget_skin)
            item = QtWidgets.QListWidgetItem(self.listWidget_skin)
            item.setSizeHint(QSize(301, 140))

            widget.setLayout(layout)
            self.listWidget_skin.addItem(item)
            self.listWidget_skin.setItemWidget(item, widget)

    def skinsetup(self, skinID):  # 皮肤设置
        # print(num)
        # urllib.request.urlretrieve(self.skin_url[num], filename=self.path + '/background.jpg')  # 本次登录时直接下载图片就行
        tcp_client_socket.send("502 " + self.userID + " " + skinID)  # 将这次设定的图片存到服务端，用于下次登录时使用
        userData_list = tcp_client_socket.rec().split()
        if userData_list[0] == "502a":
            reply = QMessageBox.about(self.form, "提示", "设置成功！")
        else:
            reply = QMessageBox.about(self.form, "提示", "设置失败！")


if __name__ == "__main__":
    import sys
    tcp_client_socket.conn()
    app = QtWidgets.QApplication(sys.argv)
    widget = QtWidgets.QWidget()
    ui = Ui_Dialog()
    ui.setupUi(widget, "12341234")
    widget.show()
    sys.exit(app.exec_())
